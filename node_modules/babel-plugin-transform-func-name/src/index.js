'use strict';

exports["default"] = function (_ref) {
    var t = _ref.types;

    var funcArray = [];
    var mainPath = null;

    const updateFuncNameVisitor = {
        CallExpression(path) {
            var prop = path.node.callee.property;

            if(prop){
                if(funcArray.indexOf(prop.name) != -1){
                    path.node.callee.property.name = prop.name.toUpperCase();
                }
            }
        }
    };

    return {
        visitor: {
            Program(path){
                mainPath = path;
                path.traverse({
                    ClassMethod(path){
                        var nodeName = path.node.key.name;

                        if(nodeName !== 'constructor') {
                            path.node.key.name = nodeName.toUpperCase();
                            funcArray.push(nodeName);
                        }
                    }
                });
            },
            Function: function(path, state) {
                var node = path.node;

                if(node.id) {
                    var funcName = node.id.name;
                    node.id.name = funcName.toUpperCase();
                    funcArray.push(funcName);
                }
            }
        },
        post(state) {
            mainPath.traverse(updateFuncNameVisitor, { funcArray });
        }
    };
};

module.exports = exports["default"];
